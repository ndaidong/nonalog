// nonalog@1.0.1, by @ndaidong - built with esbuild at 2022-08-19T10:10:57.733Z - published under MIT license
var g=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var w=(e,t)=>{for(var o in t)g(e,o,{get:t[o],enumerable:!0})},E=(e,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of h(t))!v.call(e,r)&&r!==o&&g(e,r,{get:()=>t[r],enumerable:!(n=m(t,r))||n.enumerable});return e};var L=e=>E(g({},"__esModule",{value:!0}),e);var U={};w(U,{debug:()=>T,error:()=>I,logger:()=>i,onDebug:()=>S,onError:()=>j,onTrace:()=>_,trace:()=>O});module.exports=L(U);var d=require("process"),$=require("util"),s={reset:"\x1B[0m",bold:"\x1B[1m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m"},x=e=>({debug:s.cyan,error:s.red,trace:s.yellow})[e],b=(e,t,o,n)=>{let r=[d.pid];r.push(`${s.green}${new Date().toISOString()}${s.reset}`);let u=[...new Set(t.split(":").filter(a=>a!==""))];u.length>0&&r.push(`${s.bold}${s.magenta}${u.join(o)}${s.reset}`),r.push(`${s.bold}${x(n)}${n.toUpperCase()}${s.reset}`);let c=e.map(a=>(0,$.format)(a)).join(" ");return r.push(`${x(n)}${c}${s.reset}`),r.join(" | ")},l={debug:[],error:[],trace:[]},S=e=>{l.debug.push(e)},j=e=>{l.error.push(e)},_=e=>{l.trace.push(e)},p=(e,t)=>{l[e].forEach(o=>{o(t)})},y=(e,t,o)=>{let{print:n=!0,event:r=!1,separator:u=" / "}=o,c=b(e,t,u,"debug");return n&&console.debug(c),r&&p("debug",c),c},C=(e,t,o)=>{let{print:n=!0,event:r=!1,separator:u=" / "}=o,c=b(e,t,u,"error");return n&&console.error(c),r&&p("error",c),c},D=(e,t,o)=>{let{print:n=!0,event:r=!1,separator:u=" / "}=o,c=b(e,t,u,"trace");return n&&(console.log("-".repeat(80)),console.trace(c),console.log("-".repeat(80))),r&&p("trace",c),c},i=(e="",t={})=>{let{enable:o=!0}=t;return{debug:(...r)=>r.length?o&&y(r,e,t):null,error:(...r)=>r.length?o&&C(r,e,t):null,trace:(...r)=>r.length?o&&D(r,e,t):null,branch:(r,u={})=>i(`${e}:${r}`,u)}},f=i(),T=f.debug,I=f.error,O=f.trace;0&&(module.exports={debug,error,logger,onDebug,onError,onTrace,trace});
