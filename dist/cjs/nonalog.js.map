{
  "version": 3,
  "sources": ["../../main.js"],
  "sourcesContent": ["// logger\n\nimport { pid } from 'node:process'\nimport { format } from 'util'\n\nconst STYLE = {\n  reset: '\\x1b[0m',\n  bold: '\\x1b[1m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m'\n}\n\nconst getColor = (level) => {\n  const conf = {\n    debug: STYLE.cyan,\n    error: STYLE.red,\n    trace: STYLE.yellow\n  }\n  return conf[level]\n}\n\nconst createLogLine = (args, namespace, separator, level, ts) => {\n  const parts = [pid]\n\n  parts.push(`${STYLE.green}${ts}${STYLE.reset}`)\n\n  const namespaces = [...new Set(namespace.split(':').filter(ns => ns !== ''))]\n  if (namespaces.length > 0) {\n    parts.push(`${STYLE.bold}${STYLE.magenta}${namespaces.join(separator)}${STYLE.reset}`)\n  }\n\n  parts.push(`${STYLE.bold}${getColor(level)}${level.toUpperCase()}${STYLE.reset}`)\n\n  const msg = args.map((item) => {\n    return format(item)\n  }).join(' ')\n  parts.push(`${getColor(level)}${msg}${STYLE.reset}`)\n\n  return parts.join(' | ')\n}\n\nconst event = {\n  debug: [],\n  error: [],\n  trace: []\n}\n\nexport const onDebug = (fn) => {\n  event.debug.push(fn)\n}\n\nexport const onError = (fn) => {\n  event.error.push(fn)\n}\n\nexport const onTrace = (fn) => {\n  event.trace.push(fn)\n}\n\nconst triggerEvent = (evt, data = {}) => {\n  event[evt].forEach((fn) => {\n    fn(data)\n  })\n}\n\nconst log = (args, namespace, options, level) => {\n  const ts = (new Date()).toISOString()\n  const { print = true, event = false, separator = ' / ' } = options\n  const message = createLogLine(args, namespace, separator, level, ts)\n  if (print) {\n    if (level === 'trace') {\n      console.log('-'.repeat(80))\n      console.trace(message)\n      console.log('-'.repeat(80))\n    } else if (level === 'error') {\n      console.error(message)\n    } else {\n      console.debug(message)\n    }\n  }\n  if (event) {\n    const msg = args.map((item) => {\n      return format(item)\n    }).join(' ')\n    triggerEvent(level, {\n      namespace,\n      level,\n      ts,\n      args,\n      message: msg\n    })\n  }\n  return message\n}\n\nexport const logger = (namespace = '', options = {}) => {\n  const { enable = true } = options\n  const instance = {\n    debug: (...args) => {\n      return args.length ? enable && log(args, namespace, options, 'debug') : null\n    },\n    error: (...args) => {\n      return args.length ? enable && log(args, namespace, options, 'error') : null\n    },\n    trace: (...args) => {\n      return args.length ? enable && log(args, namespace, options, 'trace') : null\n    },\n    branch: (name, opts = {}) => {\n      return logger(`${namespace}:${name}`, opts)\n    }\n  }\n  return instance\n}\n\nconst defaultLogger = logger()\n\nexport const debug = defaultLogger.debug\nexport const error = defaultLogger.error\nexport const trace = defaultLogger.trace\n"],
  "mappings": "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",
  "names": ["main_exports", "__export", "debug", "error", "logger", "onDebug", "onError", "onTrace", "trace", "__toCommonJS", "import_node_process", "import_util", "STYLE", "getColor", "level", "createLogLine", "args", "namespace", "separator", "ts", "parts", "namespaces", "ns", "msg", "item", "event", "fn", "triggerEvent", "evt", "data", "log", "options", "print", "message", "enable", "name", "opts", "defaultLogger"]
}
